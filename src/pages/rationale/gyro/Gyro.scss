// w=297, h=297
.Gyro {
  $intro-time: 3s;
  $lift-height: 30px;
  // $intro-time: 4s;
  position: relative;
  width: 297px;
  height: 297px;

  transform-style: preserve-3d;
  transform-origin: center;
  perspective-origin: center center;

  &-x, &-y, &-pos {
    transform-style: preserve-3d;
    transform-origin: center;
    perspective: 800px;
    perspective-origin: center center;
    transition: transform .3s ease-out;
    width: 297px;
    height: 297px;
  }
  &-x {
    transform: rotate3d(0, 1, 0, 0);
  }
  &-y {
    transform: rotate3d(1, 0, 0, 0);
    .Gyro--intro & {
      animation: gyro-intro-container 4s ease-in-out forwards 1;
      animation-delay: 1s;
    }
  }
  &-pos {
    animation: gyro-float 2s ease-in-out alternate infinite;
    .Gyro--intro & {
      animation: gyro-lift 1s ease-out forwards 1;
      animation-delay: 3s;
    }
  }

  &-body {
    position: absolute;
    left: 77px;
    top: 77px;
    transform: translate3d(0, 0, 50px);
    .Gyro--intro & {
      $delay: 2s;
      transform: translate3d(0,0,0);
      animation: gyro-intro-body 1s ease-out forwards;
      animation-delay: $delay;
    }
  }
  &-prop-connectors {
    position: absolute;
    left: 51px;
    top: 51px;
    transform: translate3d(0, 0, 25px);
    .Gyro--intro & {
      transform: translate3d(0,0,0);
      animation: gyro-intro-prop-connectors 1s ease-out forwards;
      animation-delay: 2s;
    }
  }
  &-prop-covers {
    position: absolute;
    transform: translate3d(0, 0, 10px);
    .Gyro--intro & {
      transform: translate3d(0,0,0);
      animation: gyro-intro-prop-covers 1s ease-out forwards;
      animation-delay: 3s;
    }
  }

  &-fill-body {
    position: absolute;
    left: 52px;
    top: 48px;
    transform: translate3d(0, 0, 15px);
    .Gyro--intro & {
      transform: translate3d(0,0,0);
      animation: gyro-intro-fill-body 1s ease-out forwards;
      animation-delay: 2s;
    }
  }

  &-fill-prop {
    position: absolute;
    transform: translate3d(0, 0, -1px);
    animation: gyro-prop-spin .6s linear forwards infinite;
    .Gyro--intro & {
      animation: gyro-intro-prop-spin 2s linear forwards 1;
      animation-delay: 3s;
    }

  }

  &-fill-prop--top-left {
    left: 3px;
    top: 3px;
  }
  &-fill-prop--top-right {
    left: 195px;
    top: 3px;
  }
  &-fill-prop--bottom-left {
    left: 3px;
    top: 195px;
  }
  &-fill-prop--bottom-right {
    left: 195px;
    top: 195px;
  }
  @keyframes gyro-prop-spin {
    0% {
      transform: rotate(0) translate3d(0, 0, 0);
    }
    100% {
      transform: rotate(360deg) translate3d(0, 0, 0);
    }
  }
  @keyframes gyro-intro-prop-spin {
    0% {
      transform: rotate(0) translate3d(0, 0, 0);
    }
    33% {
      transform: rotate(360deg) translate3d(0, 0, 0);
    }
    66% {
      transform: rotate(720deg) translate3d(0, 0, 0);
    }
    100% {
      transform: rotate(1080deg) translate3d(0, 0, 0);
    }
  }

  @keyframes gyro-intro-body {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, 0, 50px);
    }
  }
  @keyframes gyro-intro-prop-connectors {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, 0, 25px);
    }
  }
  @keyframes gyro-intro-prop-covers {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, 0, 10px);
    }
  }
  @keyframes gyro-intro-fill-body {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, 0, 15px);
    }
  }
  @keyframes gyro-intro-container {
    0% {
      transform: rotate3d(1, 0, 0, 0);
    }
    30% {
      transform: rotate3d(1, 0, 0, 50deg);
    }
    80% {
      transform: rotate3d(1, 0, 0, 50deg);
    }
    100% {
      // transform: rotate3d(1, 0, 0, 50deg);
      transform: rotate3d(1, 0, 0, 0);
    }
  }
  @keyframes gyro-float {
    0% {
      transform: translate3d(0, 0, $lift-height);
    }
    100% {
      transform: translate3d(0, 0, #{$lift-height / 2});
    }
  }
  @keyframes gyro-lift {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, 0, $lift-height);
    }
  }

}
